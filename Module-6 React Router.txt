                      Module 6. React Router


â€¢ Create React app with modules and lazy loading (Admin-user module with child router
  and outlet. 

--> db.json

{
  "users": [
    { "id": 1, "name": "Ekta", "email": "ekta@example.com" },
    { "id": 2, "name": "Jay", "email": "jay@example.com" },
    { "id": 3, "name": "Fenil", "email": "fenil@example.com" }
  ]
}

--> package.json

"scripts": {
  "start:json-server": "json-server --watch db.json --port 5000",
  "start": "react-scripts start"
}

--> App.js

import React, { lazy, Suspense } from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';

const AdminPage = lazy(() => import('./pages/Admin/AdminPage'));
const UsersPage = lazy(() => import('./pages/Admin/UsersPage'));
const UserForm = lazy(() => import('./pages/Admin/UserForm'));
const UserPage = lazy(() => import('./pages/User/UserPage'));

function App() {
  return (
    <Router>
      <Suspense fallback={<div>Loading...</div>}>
        <Routes>
          <Route path="/" element={<UserPage />} />
          <Route path="admin" element={<AdminPage />}>
            <Route index element={<UsersPage />} />
            <Route path="edit/:id" element={<UserForm />} />
          </Route>
        </Routes>
      </Suspense>
    </Router>
  );
}

export default App;

--> AdminPage Component with Outlet:

import React from 'react';
import { Outlet, Link } from 'react-router-dom';

function AdminPage() {
  return (
    <div>
      <h1>Admin Page</h1>
      <nav>
        <ul>
          <li><Link to="/admin">Users</Link></li>
          <li><Link to="/admin/edit/new">Add User</Link></li>
        </ul>
      </nav>
      <Outlet />
    </div>
  );
}

export default AdminPage;

--> UsersPage for Listing Users:

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { Link } from 'react-router-dom';

function UsersPage() {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    axios.get('http://localhost:5000/users')
      .then(response => setUsers(response.data))
      .catch(error => console.error('Error fetching users:', error));
  }, []);

  const handleDelete = (id) => {
    axios.delete(`http://localhost:5000/users/${id}`)
      .then(() => setUsers(users.filter(user => user.id !== id)))
      .catch(error => console.error('Error deleting user:', error));
  };

  return (
    <div>
      <h2>Users List</h2>
      <ul>
        {users.map(user => (
          <li key={user.id}>
            {user.name} - {user.email}
            <Link to={`/admin/edit/${user.id}`}>Edit</Link>
            <button onClick={() => handleDelete(user.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default UsersPage;

--> UserForm for Adding and Editing Users:

import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';

function UserForm() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [user, setUser] = useState({ name: '', email: '' });

  useEffect(() => {
    if (id !== 'new') {
      axios.get(`http://localhost:5000/users/${id}`)
        .then(response => setUser(response.data))
        .catch(error => console.error('Error fetching user:', error));
    }
  }, [id]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setUser(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (id === 'new') {
      axios.post('http://localhost:5000/users', user)
        .then(() => navigate('/admin'))
        .catch(error => console.error('Error creating user:', error));
    } else {
      axios.put(`http://localhost:5000/users/${id}`, user)
        .then(() => navigate('/admin'))
        .catch(error => console.error('Error updating user:', error));
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>{id === 'new' ? 'Add User' : 'Edit User'}</h2>
      <div>
        <label>Name:</label>
        <input type="text" name="name" value={user.name} onChange={handleChange} required />
      </div>
      <div>
        <label>Email:</label>
        <input type="email" name="email" value={user.email} onChange={handleChange} required />
      </div>
      <button type="submit">Save</button>
    </form>
  );
}

export default UserForm;

--> UserPage Component:

import React from 'react';

function UserPage() {
  return (
    <div>
      <h1>Welcome to the User Page</h1>
    </div>
  );
}

export default UserPage;

